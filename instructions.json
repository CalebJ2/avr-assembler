{
    "instruction-types": {
        "2-operand": {
            "regex": ".*\\s(?P<Rd>\\w+),\\s*(?P<Rr>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12,11,10]
                },
                "Rd": {
                    "bits": [8,7,6,5,4]
                },
                "Rr": {
                    "bits": [9,3,2,1,0]
                }
            }
        },
        "clr": {
            "regex": ".*\\s(?P<Rd>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12,11,10]
                },
                "Rd": {
                    "bits": [8,7,6,5,4],
                    "duplicateBits": [9,3,2,1,0]
                }
            }
        },
        "register-immediate": {
            "regex": ".*\\s(?P<Rd>\\w+),\\s*(?P<K>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12]
                },
                "Rd": {
                    "bits": [7,6,5,4]
                },
                "K": {
                    "bits": [11,10,9,8,3,2,1,0]
                }
            }
        },
        "in-out": {
            "regex": ".*\\s(?P<A>\\w+),\\s*(?P<Rr>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12,11]
                },
                "A": {
                    "bits": [10,9,3,2,1,0]
                },
                "Rr": {
                    "bits": [8,7,6,5,4]
                }
            }
        },
        "rjmp": {
            "regex": ".*\\s(?P<A>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12]
                },
                "A": {
                    "bits": [11,10,9,8,7,6,5,4,3,2,1,0],
                    "comment": "This formula expects an absolute address and converts it to relative. The instruction sets PC <- PC + k + 1",
                    "formula": "fieldValue - PC - 1"
                }
            }
        },
        "ser": {
            "regex": ".*\\s(?P<Rd>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12]
                },
                "1": {
                    "bits": [11,10,9,8,3,2,1,0]
                },
                "Rd": {
                    "bits": [7,6,5,4]
                }
            }
        },
        "branch-flag": {
            "regex": ".*\\s(?P<k>\\w+)",
            "fields": {
                "opcode": {
                    "bits": [15,14,13,12,11,10]
                },
                "k": {
                    "bits": [9,8,7,6,5,4,3],
                    "comment": "This formula expects an absolute address and converts it to relative. The instruction sets PC <- PC + k + 1",
                    "formula": "fieldValue - PC - 1"
                },
                "flag": {
                    "bits": [2,1,0]
                }
            }
        }
    },
    "instructions": {
        "cp": {
            "format": "2-operand",
            "opcode": "0b000101"
        },
        "cpc": {
            "format": "2-operand",
            "opcode": "0b000001"
        },
        "sub": {
            "format": "2-operand",
            "opcode": "0b000110"
        },
        "sbc": {
            "format": "2-operand",
            "opcode": "0b000010"
        },
        "add": {
            "format": "2-operand",
            "opcode": "0b000011"
        },
        "adc": {
            "format": "2-operand",
            "opcode": "0b000111"
        },
        "cpse": {
            "format": "2-operand",
            "opcode": "0b000100"
        },
        "and": {
            "format": "2-operand",
            "opcode": "0b001000"
        },
        "eor": {
            "format": "2-operand",
            "opcode": "0b001001"
        },
        "clr": {
            "format": "clr",
            "opcode": "0b001001"
        },
        "or": {
            "format": "2-operand",
            "opcode": "0b001010"
        },
        "mov": {
            "format": "2-operand",
            "opcode": "0b001011"
        },
        "ldi": {
            "format": "register-immediate",
            "opcode": "0b1110"
        },
        "sbci": {
            "format": "register-immediate",
            "opcode": "0b0100"
        },
        "subi": {
            "format": "register-immediate",
            "opcode": "0b0101"
        },
        "ori": {
            "format": "register-immediate",
            "opcode": "0b0110"
        },
        "sbr": {
            "format": "register-immediate",
            "opcode": "0b0110"
        },
        "andi": {
            "format": "register-immediate",
            "opcode": "0b0111"
        },
        "cpi": {
            "format": "register-immediate",
            "opcode": "0b0011"
        },
        "out": {
            "format": "in-out",
            "opcode": "0b10111"
        },
        "in": {
            "format": "in-out",
            "opcode": "0b10110"
        },
        "rjmp": {
            "format": "rjmp",
            "opcode": "0b1100"
        },
        "ser": {
            "format": "ser",
            "opcode": "0b1110"
        },
        "brcc": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b000"
        },
        "brsh": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b000"
        },
        "brcs": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b000"
        },
        "brlo": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b000"
        },
        "brhc": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b101"
        },
        "brhs": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b101"
        },
        "brid": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b111"
        },
        "brie": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b111"
        },
        "brtc": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b110"
        },
        "brts": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b110"
        },
        "brvc": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b011"
        },
        "brvs": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b011"
        },
        "brlt": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b100"
        },
        "brmi": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b010"
        },
        "brne": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b001"
        },
        "breq": {
            "format": "branch-flag",
            "opcode": "0b111100",
            "flag": "0b001"
        },
        "brpl": {
            "format": "branch-flag",
            "opcode": "0b111101",
            "flag": "0b010"
        }
    }
}